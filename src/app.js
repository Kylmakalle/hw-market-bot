const Telegraf = require('telegraf')
const Markup = require('telegraf/markup')
const User = require('./model/User')

let replyOptions;
let extraParams = {
    parse_mode: 'HTML',
    disable_notification: true,
    disable_web_page_preview: true,
    reply_markup: replyOptions
}


exports.start = (config) => {
    const bot = new Telegraf(process.env.BOT_TOKEN)
    bot.start((ctx) => {
        console.log(ctx);
        ctx.reply('Hello, I\'m hw-market bot. Here you can describe whatever you\'re going to sell related to hardware.')
    })
    bot.help((ctx) => ctx.reply('Help'))
    bot.on('sticker', (ctx) => ctx.reply('üëç'))

    bot.on('text', (ctx) => {
        const message = ctx.message;
        const lotInfo = message.text;
        const user = new User(message.from.id, message.from.first_name, message.from.last_name);
        console.log(JSON.stringify(message))

        const formattedMessage = `\n–û—Ç: ${user.getMentionByFullNameHtml()}\n–õ–æ—Ç: ${lotInfo}`

        replyOptions = Markup.inlineKeyboard([
            Markup.callbackButton('–î–æ–±—Ä–æ', `allow${user.id}`),
            Markup.callbackButton('–ì–æ–≤–Ω–æ', `deny${user.id}`)
        ])
        extraParams.reply_markup = replyOptions;
        //   .extra()

        ctx.telegram.sendMessage(process.env.MODERATION_CHAT_ID, formattedMessage, extraParams)
    })

    bot.action(/^allow([0-9]+)$/, (ctx) => {
        const userId = ctx.match[1];
        replyOptions = Markup.inlineKeyboard([
            Markup.callbackButton('–ü—Ä–æ–¥–∞–Ω–æ', `sold${userId}`)
        ])
        extraParams.reply_markup = replyOptions;
        ctx.telegram.sendMessage(userId, `–û–ø! –ú–æ–¥–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª–∞ –∏ –æ–¥–æ–±—Ä–∏–ª–∞ —Ç–≤–æ–π –ª–æ—Ç. –û–±–Ω–æ–≤–∏ —Å—Ç–∞—Ç—É—Å –ª–æ—Ç–∞ –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏`, extraParams)
        ctx.reply('–û–∫–µ–π, –∑–∞–∫—Ä—ã–≤–∞—é –ª–æ—Ç.')
    })
    bot.action(/^deny([0-9]+)$/, (ctx) => {
        const userId = ctx.match[1];
        const reasonMessage = '-';
        ctx.telegram.sendMessage(userId, `–ò–∑–≤–∏–Ω–∏, –Ω–æ —Ç–≤–æ–π –ª–æ—Ç –Ω–µ –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π.\n–ü—Ä–∏—á–∏–Ω–∞: ${reasonMessage}`)
    })


    bot.launch()
}
